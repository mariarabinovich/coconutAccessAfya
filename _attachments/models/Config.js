// Generated by CoffeeScript 1.6.2
var Config, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Config = (function(_super) {
  __extends(Config, _super);

  function Config() {
    _ref = Config.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  Config.prototype.initialize = function() {
    return this.set({
      _id: "coconut.config"
    });
  };

  Config.prototype.fetch = function(options) {
    return Config.__super__.fetch.call(this, {
      success: function() {
        Coconut.config.local = new LocalConfig();
        return Coconut.config.local.fetch({
          success: function() {
            if (navigator.userAgent.match(/Android|Kindle|Silk/i)) {
              Coconut.config.local.set("mode", "mobile");
            }
            return typeof options.success === "function" ? options.success() : void 0;
          },
          error: function() {
            return typeof options.error === "function" ? options.error() : void 0;
          }
        });
      },
      error: function() {
        return typeof options.error === "function" ? options.error() : void 0;
      }
    });
  };

  Config.prototype.url = "/configuration";

  Config.prototype.title = function() {
    return this.get("title") || "Coconut";
  };

  Config.prototype.database_name = function() {
    return Backbone.couch_connector.config.db_name;
  };

  Config.prototype.design_doc_name = function() {
    return Backbone.couch_connector.config.ddoc_name;
  };

  Config.prototype.cloud_url = function() {
    return "" + (this.get("synchronization_target"));
  };

  Config.prototype.cloud_url_with_credentials = function() {
    return this.cloud_url().replace(/http:\/\//, "http://" + (this.get("cloud_credentials")) + "@");
  };

  return Config;

})(Backbone.Model);

/*
//@ sourceMappingURL=Config.map
*/
