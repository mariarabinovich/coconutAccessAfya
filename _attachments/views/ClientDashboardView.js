// Generated by CoffeeScript 1.8.0
var ClientDashboardView,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ClientDashboardView = (function(_super) {
  __extends(ClientDashboardView, _super);

  function ClientDashboardView() {
    this.render = __bind(this.render, this);
    return ClientDashboardView.__super__.constructor.apply(this, arguments);
  }

  ClientDashboardView.prototype.el = '#clientDashboard';

  ClientDashboardView.prototype.events = {
    "change": "render"
  };

  ClientDashboardView.prototype.render = function() {
    var clientInfo;
    clientInfo = "somestuff about the client";
    return this.$el.html("" + clientInfo + " <div class='subheader'> <a class='manageActions' href='#'>Vitals (25%)</a> | <a class='manageActions selected' href='#'> selected one variable (78%)</a> | <a class='manageActions' href='#'>Maternal Visit (if female?)</a> | <a class='manageActions' href='#'>Order Labs</a> | <a class='manageActions' href='#'>Prescribe</a> | <a class='manageActions' href='#'>Clinician notes (0%)</a> </div>");
  };

  ClientDashboardView.prototype.update = function() {
    var clientInfo;
    clientInfo = "theres new client info";
    this.$el.html("" + clientInfo + " and more stuff cause appended");
    return alert("updated");
  };

  return ClientDashboardView;

})(Backbone.View);

//# sourceMappingURL=ClientDashboardView.js.map
