// Generated by CoffeeScript 1.8.0
var ClientSummaryView,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

ClientSummaryView = (function(_super) {
  __extends(ClientSummaryView, _super);

  function ClientSummaryView() {
    this.renderResult = __bind(this.renderResult, this);
    this.render = __bind(this.render, this);
    this.changeQuestionSet = __bind(this.changeQuestionSet, this);
    this.startVisit = __bind(this.startVisit, this);
    this.editclientInfo = __bind(this.editclientInfo, this);
    return ClientSummaryView.__super__.constructor.apply(this, arguments);
  }

  ClientSummaryView.prototype.el = '#content';

  ClientSummaryView.prototype.events = {
    "click .startVisit": "startVisit",
    "click .editClientInfo": "editclientInfo"
  };

  ClientSummaryView.prototype.editclientInfo = function() {
    console.log('alskdfj');
    Coconut.menuView.renderForClientInfo(this.client);
    return document.location.href = "#edit/result/" + this.client.clientID;
  };

  ClientSummaryView.prototype.startVisit = function() {
    Coconut.menuView.renderForClientVisit(this.client);
    return document.location.href = "#new/result/Vitals/" + this.client.clientID;
  };

  ClientSummaryView.prototype.changeQuestionSet = function(newQuestionSet) {
    return document.location.href = newQuestionSet;
  };

  ClientSummaryView.prototype.render = function() {
    var data;
    console.log(this.client);
    Coconut.menuView.renderForClient(this.client);
    this.$el.html("<div class='aSection'> <table class='patientInfo'> <thead><th colspan='2'>Please ask the client if this information is up to date</th></thead> <tbody> " + (data = {
      "Age": "Age",
      "Gender": "Gender",
      "Allergies": "Allergies",
      "Known Issues": "Known Issues",
      "Membership status": "Membership status"
    }, _.map(data, function(value, property) {
      return "<tr> <td> " + property + " </td> <td> " + value + " </td> </tr>";
    }).join("")) + " </tbody> <tfoot><th colspan='2'> <a class='buttonLinks sideBySideButtons editClientInfo' > Edit " + (this.client.firstName()) + "'s Contact and Basic Info</a> </th></tfoot> </table> </div> <div class='aSection'> <a class='buttonLinks sideBySideButtons startVisit' > New clinical visit for " + (this.client.firstName()) + "</a> <a class='buttonLinks sideBySideButtons startVisit' > Followup visit for " + (this.client.firstName()) + "</a> </div>");
    return $("button").button();
  };

  ClientSummaryView.prototype.renderResult = function(result) {
    return "<table class='lastVisitResults'> <thead> <th>Property</th> <th>Value</th> </thead> <tbody> " + (_.map(result, function(value, property) {
      return "<tr> <td> " + property + " </td> <td> " + value + " </td> </tr>";
    }).join("")) + " <tr> </tr> </tbody> </table>";
  };

  return ClientSummaryView;

})(Backbone.View);

//# sourceMappingURL=ClientSummary.js.map
