// Generated by CoffeeScript 1.8.0
var HealthySchoolsView,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

HealthySchoolsView = (function(_super) {
  __extends(HealthySchoolsView, _super);

  function HealthySchoolsView() {
    this.render = __bind(this.render, this);
    return HealthySchoolsView.__super__.constructor.apply(this, arguments);
  }

  HealthySchoolsView.prototype.el = '#constantbuttons';

  HealthySchoolsView.prototype.events = {
    "click #addHealthySchoolsClient": "addHSClient"
  };

  HealthySchoolsView.prototype.render = function() {
    return this.$el.html("<button id='addHealthySchoolsClient' type='button'>Add New Healthy Schools Client</button> <p> 1- trigger the ability to add a client or search for one. . . register new kid or search for a child<br> 2- make a new form for registering kids. with schools field of autocomplete<br> 3- make a new followup form for healthy schools kids, with schools and name fields prefilled and uneditable<br> 4- make sure datapoints that are the same as adults are called the same thing (data consistency)<br> 5- make the child dashboard for a preregistered kid - client info<br> this will be the healthi schools forms i guess with a button at the end that will trigger a new registration or a client search. </p>");
  };

  HealthySchoolsView.prototype.addHSClient = function() {
    var burgerbutton, menu, schoolName;
    schoolName = this.lastSchoolNameUsed;
    Coconut.router.navigate("/new/result/Healthy Schools/" + schoolName, true);
    $("html, body").animate({
      scrollTop: $('#top-menu').offset().top
    });
    menu = $('.main-nav');
    burgerbutton = $('.menuburger');
    menu.removeClass("open");
    menu.css('display', 'none');
    return burgerbutton.removeClass("menuisopen", "slow");
  };

  return HealthySchoolsView;

})(Backbone.View);

//# sourceMappingURL=HealthySchoolsView.js.map
